/* PureMVC AS2 FlashLite Demo - Balloonatroid Copyright (c) 2007, 2008 by Cliff Hall <clifford.hall@puremvc.org> and  Chandima Cumaranatunge <chandima.cumaranatunge@puremvc.org> Your reuse is governed by the Creative Commons Attribution 3.0 License */import org.puremvc.as2.interfaces.ICommand;import org.puremvc.as2.interfaces.INotification;import org.puremvc.as2.patterns.command.SimpleCommand;import balloonatroid.*;import balloonatroid.view.*;import balloonatroid.model.*;import balloonatroid.model.game.*;class balloonatroid.controller.LoadLevelMovieCommand extends SimpleCommand implements ICommand{	/**	 * Load the next level SWF into the passed MovieClip.	 * <P>	 * Retrives <code>GameHistoryProxy</code> to acces the game history data object.	 * Increments  last played level in the game history data object and	 * loads the external level SWF file corresponding to the new level. 	 * <P>	 * Level SWF filename should be in the form:	 * <P>	 * <code>LevelXX.swf</code>	 * <P>	 * <code>XX</code> is the two digit level number (zero precedes levels below 10).	 * <P>	 * Loading the level swf is an asynchronous operation. Currently, there is no	 * check to pause the 'play screen' entry animation until the level SWF is loaded	 * as the level movie is loaded before animation ends.	 *	 * @param	note Notification with type <code>MovieClip</code> object as body that 	 			is the container MovieClip that will hold the level SWF.	 * @see 	balloonatroid.model.GameHistoryProxy	 * @see 	balloonatroid.model.game.GameHistoryVO	 * @use 	<code>GameHistoryProxy</code> needs to be registered prior to command execution.	 * @todo 1.	Broadcast a notification when level SWF is loaded.	 * @todo 2.	If the load error status code is 'file not found' then transition to a screen	 *		 	to purchase new game levels.	 */	public function execute( note : INotification ) : Void 	{				// Get the level container Movieclip		var levelMovieContainer_mc:MovieClip = MovieClip( note.getBody() );				// Calculate the next level SWF that needs to be loaded		var gameHistoryProxy:GameHistoryProxy = GameHistoryProxy( facade.retrieveProxy( GameHistoryProxy.NAME ) );		var level:Number = ++gameHistoryProxy.gameHistory.lastLevel; // next level		var levelSWF:String = 'Level' + level + '.swf';				// MovieClipLoader		var level_mcl:MovieClipLoader = new MovieClipLoader();				// Create listener object:		var mclListener:Object = new Object();				mclListener.onLoadError = function(target_mc:MovieClip, errorCode:String, status:Number) {			trace("Error loading Level Movie: " + errorCode + " [" + status + "]");		};				mclListener.onLoadComplete = function(target_mc:MovieClip, status:Number) 		{			//trace( "Level Movie LOADED" + " [" + status + "]");		};				// Register listener		level_mcl.addListener(mclListener);				// load the movie into the level container Movieclip		level_mcl.loadClip(levelSWF, levelMovieContainer_mc); 	}}