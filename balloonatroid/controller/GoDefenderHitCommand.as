/* PureMVC AS2 FlashLite Demo - Balloonatroid Copyright (c) 2007, 2008 by Cliff Hall <clifford.hall@puremvc.org> and  Chandima Cumaranatunge <chandima.cumaranatunge@puremvc.org> Your reuse is governed by the Creative Commons Attribution 3.0 License */import org.puremvc.as2.interfaces.ICommand;import org.puremvc.as2.interfaces.INotification;import org.puremvc.as2.patterns.command.SimpleCommand;import balloonatroid.*;import balloonatroid.view.*;import balloonatroid.model.*;import balloonatroid.model.*;class balloonatroid.controller.GoDefenderHitCommand extends SimpleCommand implements ICommand{	/**	 * Change defender balloon state to the HIT State. Retrieves the 	 * corresponding defender proxy and changes the defender state to a 	 * new instance of <code>HitState</code>.	 *	 * @param note Notification body should be the canonical name of the <code>DefenderProxy</code> 	 *		as a <code>String</code>.	 * @see balloonatroid.model.DefenderProxy	 * @see balloonatroid.model.defender.HitState	 * @use <code>DefenderProxy</code> needs to be registered prior to command execution.	 */	public function execute( note:INotification ) : Void 	{				// Get the proxy name		var proxyName:String = String( note.getBody() );			// Get the corresponding defender proxy		var defenderProxy = facade.retrieveProxy( proxyName );				// Change the defender state		defenderProxy.changeState( new balloonatroid.model.defender.HitState() );	}}