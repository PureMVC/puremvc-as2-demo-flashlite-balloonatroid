/* PureMVC AS2 FlashLite Demo - Balloonatroid Copyright (c) 2007, 2008 by Cliff Hall <clifford.hall@puremvc.org> and  Chandima Cumaranatunge <chandima.cumaranatunge@puremvc.org> Your reuse is governed by the Creative Commons Attribution 3.0 License */import org.puremvc.as2.interfaces.ICommand;import org.puremvc.as2.interfaces.INotification;import org.puremvc.as2.patterns.command.SimpleCommand;import balloonatroid.*;import balloonatroid.view.*;import balloonatroid.model.*;import balloonatroid.model.volley.*;class balloonatroid.controller.VolleyAimLeftCommand extends SimpleCommand implements ICommand{	/**	 * Moves the Volley Balloon to the left.	 * 	 * Retrives the <code>VolleyProxy</code> proxy to determine the	 * current state of the Volley Balloon. If the in the DORMANT state	 * then it is moved by {@code AIM_AMOUNT} pixels specified in the 	 * {@code VolleyDO} data object if the balloon will end up within bounds. 	 * If in the INFLIGHT state a horizontal speed of {@code STEER_AMOUNT} 	 * pixels per second  is added to its  speed in the aiming direction.	 *	 * Movement is accomplished by setting the targetX and target properties of the	 * vollery ballon. The current valley state update method iteratively moves the balloon	 * to the target based on a movement algorithm.	 *	 * @see balloonatroid.model.VolleyProxy	 * @see balloonatroid.model.volley.VolleyDO#AIM_AMOUNT	 * @see balloonatroid.model.volley.VolleyDO#STEER_AMOUNT	 * @use <code>VolleyProxy</code> needs to be registered 	 *		prior to command execution.	 */	public function execute( note:INotification ) : Void 	{				// Get the VolleyProxy proxy		var volleyProxy = facade.retrieveProxy(VolleyProxy.NAME);		// move volley balloon to the left 		switch (volleyProxy.sprite.currentState) 		{			case VolleyProxy.DORMANT:				if ( volleyProxy.sprite.targetX -VolleyDO.AIM_AMOUNT > 0 ) 				{					volleyProxy.adjustTarget( -VolleyDO.AIM_AMOUNT, 0 );				}				break;			case VolleyProxy.INFLIGHT:				volleyProxy.addSpeed( -VolleyDO.STEER_AMOUNT , 0 );				break;		}	}}