/* PureMVC AS2 FlashLite Demo - Balloonatroid Copyright (c) 2007, 2008 by Cliff Hall <clifford.hall@puremvc.org> and  Chandima Cumaranatunge <chandima.cumaranatunge@puremvc.org> Your reuse is governed by the Creative Commons Attribution 3.0 License *//** * Abstract Sprite Data Object class for MovieClip Symbols. * Bound classes defined in the Linkage Identifiers of MovieClip symbols subclass this. * Defines constants and default values for sprites. */class balloonatroid.model.AbstractSpriteDO extends MovieClip{		/** Cannonical name of a Boss Sprite. */	public static var BOSS:String 			= "boss"		/** Cannonical name of a Defender Sprite. */	public static var DEFENDER:String 		= "defender"		/** Cannonical name of a Shield Sprite. */	public static var SHIELD:String 		= "shield"		/** Cannonical name of a Volley Sprite. */	public static var VOLLEY:String 		= "volley"	/** Rapidly overshoot target and bounce back a few times. */	public static var BOUNCEY:Number 		= 0.7		/** Move direct to target. */	public static var FLAT:Number 			= 1.0		/** Approach target more slowly each frame. */	public static var EASE_IN:Number 		= 1.8		/** Sprite Speed in the X direction. */	public var speedX:Number = 0;		/** Sprite Speed in the Y direction. */	public var speedY:Number = 0;		/** Maximum speed of the Sprite. */	public var speedMax:Number = 0;		/** 	 * Type of Sprite.	 * Can be a {@link #BOSS}, {@link #DEFENDER}, {@link #SHIELD}, or {@link #VOLLEY}. 	 */	public var spriteType:String;		/** 	 * Set to the sprite that hit this sprite (otherwise null). 	 * This property is the flag for a hit.	 */	public var hitBySprite:AbstractSpriteDO = null;		/** 	 * Inertia setting.	 * Must be &gt;=.5 &lt;=2, constants are defined for good values. 	 */	public var inertia:Number = FLAT;		/** 	 * Wander method.	 * Can be: 	 * <ul>	 * <li> {@link balloonatroid.model.AbstractSpriteProxy#HORIZONTAL}.	 * <li> {@link balloonatroid.model.AbstractSpriteProxy#VERTICAL}.	 * <li> {@link balloonatroid.model.AbstractSpriteProxy#CIRCULAR}.	 * </ul>	 */	public var wanderMethod:String = balloonatroid.model.AbstractSpriteProxy.HORIZONTAL;		/** Half the maximum wander distance. */	public var wanderRadius:Number = 0;		// If not active, no collision detect notifications are sent 	// and mediator should ignore incoming notifications	public var active:Boolean = true;	/** X Possition of target locaton. Used for movement. */	public var targetX:Number;		/** Y Possition of target locaton. Used for movement. */	public var targetY:Number;	// horizontal and vertical drift 	public var driftX:Number = 0;	public var driftY:Number = 0;		// optionally constrain clip position to within given bounds	public var hasBoundsX:Boolean = false;	public var hasBoundsY:Boolean = false;	public var lowerBoundX:Number;	public var lowerBoundY:Number;	public var upperBoundX:Number;	public var upperBoundY:Number;		/** Last time sprite was updated (in milliseconds since the SWF started). */ 	public var lastUpdateTime : Number = null;		/** Current state. Initial value is {@code null}. */ 	public var currentState 	: balloonatroid.interfaces.IState = null;		/** Previous state. Initial value is {@code null}. */ 	public var previousState 	: balloonatroid.interfaces.IState = null;		}